"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GarmentActionTypes = require("../../../business-layer/shared-types/actions/garment.action.types");
exports.GarmentTypes = GarmentActionTypes;
var GetGarmentCollection = (function () {
    function GetGarmentCollection() {
        this.type = GarmentActionTypes.FETCH_GARMENT_COLLECTION_ATTEMPT;
    }
    return GetGarmentCollection;
}());
exports.GetGarmentCollection = GetGarmentCollection;
var GetGarmentCollectionFailure = (function () {
    function GetGarmentCollectionFailure(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.FETCH_GARMENT_COLLECTION_FAILURE;
    }
    return GetGarmentCollectionFailure;
}());
exports.GetGarmentCollectionFailure = GetGarmentCollectionFailure;
var GetGarmentCollectionSuccess = (function () {
    function GetGarmentCollectionSuccess(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.FETCH_GARMENT_COLLECTION_SUCCESS;
    }
    return GetGarmentCollectionSuccess;
}());
exports.GetGarmentCollectionSuccess = GetGarmentCollectionSuccess;
var UpdateGarmentAttempt = (function () {
    function UpdateGarmentAttempt(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.UPDATE_GARMENT_IN_COLLECTION_ATTEMPT;
    }
    return UpdateGarmentAttempt;
}());
exports.UpdateGarmentAttempt = UpdateGarmentAttempt;
var UpdateGarmentFailure = (function () {
    function UpdateGarmentFailure(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.UPDATE_GARMENT_IN_COLLECTION_FAILURE;
    }
    return UpdateGarmentFailure;
}());
exports.UpdateGarmentFailure = UpdateGarmentFailure;
var UpdateGarmentSuccess = (function () {
    function UpdateGarmentSuccess(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.UPDATE_GARMENT_IN_COLLECTION_SUCCESS;
    }
    return UpdateGarmentSuccess;
}());
exports.UpdateGarmentSuccess = UpdateGarmentSuccess;
var AddGarmentToCollectionAttempt = (function () {
    function AddGarmentToCollectionAttempt(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.ADD_GARMENT_TO_COLLECTION_ATTEMPT;
    }
    return AddGarmentToCollectionAttempt;
}());
exports.AddGarmentToCollectionAttempt = AddGarmentToCollectionAttempt;
var AddGarmentToCollectionFailure = (function () {
    function AddGarmentToCollectionFailure(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.ADD_GARMENT_TO_COLLECTION_FAILURE;
    }
    return AddGarmentToCollectionFailure;
}());
exports.AddGarmentToCollectionFailure = AddGarmentToCollectionFailure;
var AddGarmentToCollectionSuccess = (function () {
    function AddGarmentToCollectionSuccess(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.ADD_GARMENT_TO_COLLECTION_SUCCESS;
    }
    return AddGarmentToCollectionSuccess;
}());
exports.AddGarmentToCollectionSuccess = AddGarmentToCollectionSuccess;
var GetSubsetOfCollection = (function () {
    function GetSubsetOfCollection(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.GET_SUBSET_OF_COLLECTION;
    }
    return GetSubsetOfCollection;
}());
exports.GetSubsetOfCollection = GetSubsetOfCollection;
var UpdateSortedCollection = (function () {
    function UpdateSortedCollection(payload) {
        this.payload = payload;
        this.type = GarmentActionTypes.UPDATE_SORTED_COLLECTION;
    }
    return UpdateSortedCollection;
}());
exports.UpdateSortedCollection = UpdateSortedCollection;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kYXRhLWxheWVyL25ncngtZGF0YS9hY3Rpb25zL2dhcm1lbnQuYWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVNBLHNHQUEwRztBQUc3RixRQUFBLFlBQVksR0FBRyxrQkFBa0IsQ0FBQztBQUUvQztJQUFBO1FBQ2lCLFNBQUksR0FBRyxrQkFBa0IsQ0FBQyxnQ0FBZ0MsQ0FBQztJQUM1RSxDQUFDO0lBQUQsMkJBQUM7QUFBRCxDQUZBLEFBRUMsSUFBQTtBQUZZLG9EQUFvQjtBQUlqQztJQUVFLHFDQUFtQixPQUFrQjtRQUFsQixZQUFPLEdBQVAsT0FBTyxDQUFXO1FBRHRCLFNBQUksR0FBRyxrQkFBa0IsQ0FBQyxnQ0FBZ0MsQ0FBQztJQUNoQyxDQUFDO0lBQzdDLGtDQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSxrRUFBMkI7QUFNeEM7SUFFRSxxQ0FBbUIsT0FBVztRQUFYLFlBQU8sR0FBUCxPQUFPLENBQUk7UUFEZixTQUFJLEdBQUcsa0JBQWtCLENBQUMsZ0NBQWdDLENBQUM7SUFDdkMsQ0FBQztJQUN0QyxrQ0FBQztBQUFELENBSEEsQUFHQyxJQUFBO0FBSFksa0VBQTJCO0FBS3hDO0lBRUMsOEJBQW1CLE9BQXVCO1FBQXZCLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBRDFCLFNBQUksR0FBSSxrQkFBa0IsQ0FBQyxvQ0FBb0MsQ0FBQztJQUNqQyxDQUFDO0lBQ2pELDJCQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSxvREFBb0I7QUFLakM7SUFFQyw4QkFBbUIsT0FBdUI7UUFBdkIsWUFBTyxHQUFQLE9BQU8sQ0FBZ0I7UUFEMUIsU0FBSSxHQUFJLGtCQUFrQixDQUFDLG9DQUFvQyxDQUFDO0lBQ2pDLENBQUM7SUFDakQsMkJBQUM7QUFBRCxDQUhBLEFBR0MsSUFBQTtBQUhZLG9EQUFvQjtBQU1qQztJQUVDLDhCQUFtQixPQUF1QjtRQUF2QixZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQUQxQixTQUFJLEdBQUksa0JBQWtCLENBQUMsb0NBQW9DLENBQUM7SUFDakMsQ0FBQztJQUNqRCwyQkFBQztBQUFELENBSEEsQUFHQyxJQUFBO0FBSFksb0RBQW9CO0FBTWpDO0lBRUMsdUNBQW1CLE9BQXVCO1FBQXZCLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBRDFCLFNBQUksR0FBSSxrQkFBa0IsQ0FBQyxpQ0FBaUMsQ0FBQztJQUM5QixDQUFDO0lBQ2pELG9DQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSxzRUFBNkI7QUFLMUM7SUFFQyx1Q0FBbUIsT0FBdUI7UUFBdkIsWUFBTyxHQUFQLE9BQU8sQ0FBZ0I7UUFEMUIsU0FBSSxHQUFJLGtCQUFrQixDQUFDLGlDQUFpQyxDQUFDO0lBQzlCLENBQUM7SUFDakQsb0NBQUM7QUFBRCxDQUhBLEFBR0MsSUFBQTtBQUhZLHNFQUE2QjtBQUsxQztJQUVDLHVDQUFtQixPQUF1QjtRQUF2QixZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQUQxQixTQUFJLEdBQUksa0JBQWtCLENBQUMsaUNBQWlDLENBQUM7SUFDOUIsQ0FBQztJQUNqRCxvQ0FBQztBQUFELENBSEEsQUFHQyxJQUFBO0FBSFksc0VBQTZCO0FBSzFDO0lBRUUsK0JBQW1CLE9BQTBCO1FBQTFCLFlBQU8sR0FBUCxPQUFPLENBQW1CO1FBRDlCLFNBQUksR0FBSSxrQkFBa0IsQ0FBQyx3QkFBd0IsQ0FBQztJQUNqQixDQUFDO0lBQ3JELDRCQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSxzREFBcUI7QUFLbEM7SUFFRSxnQ0FBbUIsT0FBd0I7UUFBeEIsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFENUIsU0FBSSxHQUFJLGtCQUFrQixDQUFDLHdCQUF3QixDQUFDO0lBQ25CLENBQUM7SUFDbkQsNkJBQUM7QUFBRCxDQUhBLEFBR0MsSUFBQTtBQUhZLHdEQUFzQiIsImZpbGUiOiJhcHAvZGF0YS1sYXllci9uZ3J4LWRhdGEvYWN0aW9ucy9nYXJtZW50LmFjdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBHYXJtZW50TW9kZWwsXG4gICAgICAgICBFcnJvck1vZGVsLFxuICAgICAgICAgR2FybWVudEFkZE1vZGVsLFxuICAgICAgICAgR2FybWVudENvbGxlY3Rpb25Nb2RlbCxcbiAgICAgICAgIEdhcm1lbnRTdWJzZXRNb2RlbCxcbiAgICAgICAgIEdhcm1lbnRTb3J0TW9kZWx9IGZyb20gJy4uLy4uLy4uL2J1c2luZXNzLWxheWVyL21vZGVscy9pbmRleCc7XG5cbmltcG9ydCAqIGFzICBHYXJtZW50QWN0aW9uVHlwZXMgIGZyb20gJy4uLy4uLy4uL2J1c2luZXNzLWxheWVyL3NoYXJlZC10eXBlcy9hY3Rpb25zL2dhcm1lbnQuYWN0aW9uLnR5cGVzJztcblxuXG5leHBvcnQgY29uc3QgR2FybWVudFR5cGVzID0gR2FybWVudEFjdGlvblR5cGVzO1xuXG5leHBvcnQgY2xhc3MgR2V0R2FybWVudENvbGxlY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xuIHB1YmxpYyByZWFkb25seSB0eXBlID0gR2FybWVudEFjdGlvblR5cGVzLkZFVENIX0dBUk1FTlRfQ09MTEVDVElPTl9BVFRFTVBUO1xufVxuXG5leHBvcnQgY2xhc3MgR2V0R2FybWVudENvbGxlY3Rpb25GYWlsdXJlIGltcGxlbWVudHMgQWN0aW9uIHtcbiBwdWJsaWMgcmVhZG9ubHkgdHlwZSA9IEdhcm1lbnRBY3Rpb25UeXBlcy5GRVRDSF9HQVJNRU5UX0NPTExFQ1RJT05fRkFJTFVSRTtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6RXJyb3JNb2RlbCkgeyAgfVxufVxuXG5cbmV4cG9ydCBjbGFzcyBHZXRHYXJtZW50Q29sbGVjdGlvblN1Y2Nlc3MgaW1wbGVtZW50cyBBY3Rpb24ge1xuIHB1YmxpYyByZWFkb25seSB0eXBlID0gR2FybWVudEFjdGlvblR5cGVzLkZFVENIX0dBUk1FTlRfQ09MTEVDVElPTl9TVUNDRVNTO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDphbnkpIHsgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFVwZGF0ZUdhcm1lbnRBdHRlbXB0IGltcGxlbWVudHMgQWN0aW9uIHtcbiBwdWJsaWMgcmVhZG9ubHkgdHlwZSA9ICBHYXJtZW50QWN0aW9uVHlwZXMuVVBEQVRFX0dBUk1FTlRfSU5fQ09MTEVDVElPTl9BVFRFTVBUO1xuIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOkdhcm1lbnRBZGRNb2RlbCkgeyAgfVxufVxuXG5leHBvcnQgY2xhc3MgVXBkYXRlR2FybWVudEZhaWx1cmUgaW1wbGVtZW50cyBBY3Rpb24ge1xuIHB1YmxpYyByZWFkb25seSB0eXBlID0gIEdhcm1lbnRBY3Rpb25UeXBlcy5VUERBVEVfR0FSTUVOVF9JTl9DT0xMRUNUSU9OX0ZBSUxVUkU7XG4gY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6R2FybWVudEFkZE1vZGVsKSB7ICB9XG59XG5cblxuZXhwb3J0IGNsYXNzIFVwZGF0ZUdhcm1lbnRTdWNjZXNzIGltcGxlbWVudHMgQWN0aW9uIHtcbiBwdWJsaWMgcmVhZG9ubHkgdHlwZSA9ICBHYXJtZW50QWN0aW9uVHlwZXMuVVBEQVRFX0dBUk1FTlRfSU5fQ09MTEVDVElPTl9TVUNDRVNTO1xuIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOkdhcm1lbnRBZGRNb2RlbCkgeyAgfVxufVxuXG5cbmV4cG9ydCBjbGFzcyBBZGRHYXJtZW50VG9Db2xsZWN0aW9uQXR0ZW1wdCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gcHVibGljIHJlYWRvbmx5IHR5cGUgPSAgR2FybWVudEFjdGlvblR5cGVzLkFERF9HQVJNRU5UX1RPX0NPTExFQ1RJT05fQVRURU1QVDtcbiBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDpHYXJtZW50QWRkTW9kZWwpIHsgIH1cbn1cblxuZXhwb3J0IGNsYXNzIEFkZEdhcm1lbnRUb0NvbGxlY3Rpb25GYWlsdXJlIGltcGxlbWVudHMgQWN0aW9uIHtcbiBwdWJsaWMgcmVhZG9ubHkgdHlwZSA9ICBHYXJtZW50QWN0aW9uVHlwZXMuQUREX0dBUk1FTlRfVE9fQ09MTEVDVElPTl9GQUlMVVJFO1xuIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOkdhcm1lbnRBZGRNb2RlbCkgeyAgfVxufVxuXG5leHBvcnQgY2xhc3MgQWRkR2FybWVudFRvQ29sbGVjdGlvblN1Y2Nlc3MgaW1wbGVtZW50cyBBY3Rpb24ge1xuIHB1YmxpYyByZWFkb25seSB0eXBlID0gIEdhcm1lbnRBY3Rpb25UeXBlcy5BRERfR0FSTUVOVF9UT19DT0xMRUNUSU9OX1NVQ0NFU1M7XG4gY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6R2FybWVudEFkZE1vZGVsKSB7ICB9XG59XG5cbmV4cG9ydCBjbGFzcyBHZXRTdWJzZXRPZkNvbGxlY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xuIHB1YmxpYyByZWFkb25seSB0eXBlID0gIEdhcm1lbnRBY3Rpb25UeXBlcy5HRVRfU1VCU0VUX09GX0NPTExFQ1RJT047XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOkdhcm1lbnRTdWJzZXRNb2RlbCkgeyAgfVxufVxuXG5leHBvcnQgY2xhc3MgVXBkYXRlU29ydGVkQ29sbGVjdGlvbiBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gcHVibGljIHJlYWRvbmx5IHR5cGUgPSAgR2FybWVudEFjdGlvblR5cGVzLlVQREFURV9TT1JURURfQ09MTEVDVElPTjtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6R2FybWVudFNvcnRNb2RlbCkgeyAgfVxufVxuXG5cbmV4cG9ydCB0eXBlIEFjdGlvbnMgPVxuR2V0R2FybWVudENvbGxlY3Rpb25cbiAgICAgfCBHZXRHYXJtZW50Q29sbGVjdGlvbkZhaWx1cmVcbiAgICAgfCBHZXRHYXJtZW50Q29sbGVjdGlvblN1Y2Nlc3NcbiAgICAgfCBVcGRhdGVHYXJtZW50QXR0ZW1wdFxuICAgICB8IFVwZGF0ZUdhcm1lbnRGYWlsdXJlXG4gICAgIHwgVXBkYXRlR2FybWVudFN1Y2Nlc3NcbiAgICAgfCBBZGRHYXJtZW50VG9Db2xsZWN0aW9uQXR0ZW1wdFxuICAgICB8IEFkZEdhcm1lbnRUb0NvbGxlY3Rpb25GYWlsdXJlXG4gICAgIHwgQWRkR2FybWVudFRvQ29sbGVjdGlvblN1Y2Nlc3NcbiAgICAgfCBHZXRTdWJzZXRPZkNvbGxlY3Rpb25cbiAgICAgfCBVcGRhdGVTb3J0ZWRDb2xsZWN0aW9uXG5cblxuXG5cbiJdfQ==
