"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ProfileActionTypes = require("../../../business-layer/shared-types/actions/profile.action.types");
exports.ProfileTypes = ProfileActionTypes;
var CheckUserProfileNameAttempt = (function () {
    function CheckUserProfileNameAttempt(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.CHECK_USER_PROFILE_NAME_ATTEMPT;
    }
    return CheckUserProfileNameAttempt;
}());
exports.CheckUserProfileNameAttempt = CheckUserProfileNameAttempt;
var CheckUserProfileNameFailure = (function () {
    function CheckUserProfileNameFailure(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.CHECK_USER_PROFILE_NAME_FAILURE;
    }
    return CheckUserProfileNameFailure;
}());
exports.CheckUserProfileNameFailure = CheckUserProfileNameFailure;
var CheckUserProfileNameSuccess = (function () {
    function CheckUserProfileNameSuccess(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.CHECK_USER_PROFILE_NAME_SUCCESS;
    }
    return CheckUserProfileNameSuccess;
}());
exports.CheckUserProfileNameSuccess = CheckUserProfileNameSuccess;
var ResetUserNameVailid = (function () {
    function ResetUserNameVailid() {
        this.type = ProfileActionTypes.RESET_USER_PROFILE_NAME_VALID;
    }
    return ResetUserNameVailid;
}());
exports.ResetUserNameVailid = ResetUserNameVailid;
var SetProfileSelectedId = (function () {
    function SetProfileSelectedId(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.SET_SELECTED_PROFILE_ID;
    }
    return SetProfileSelectedId;
}());
exports.SetProfileSelectedId = SetProfileSelectedId;
var GetUserProfileAttempt = (function () {
    function GetUserProfileAttempt(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.GET_USER_PROFILE_ATTEMPT;
    }
    return GetUserProfileAttempt;
}());
exports.GetUserProfileAttempt = GetUserProfileAttempt;
var GetUserProfileFailure = (function () {
    function GetUserProfileFailure(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.GET_USER_PROFILE_FAILURE;
    }
    return GetUserProfileFailure;
}());
exports.GetUserProfileFailure = GetUserProfileFailure;
var GetUserProfileSuccess = (function () {
    function GetUserProfileSuccess(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.GET_USER_PROFILE_SUCCESS;
    }
    return GetUserProfileSuccess;
}());
exports.GetUserProfileSuccess = GetUserProfileSuccess;
var UserRegistrationFailure = (function () {
    function UserRegistrationFailure(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.REGISTER_USER_FAILURE;
    }
    return UserRegistrationFailure;
}());
exports.UserRegistrationFailure = UserRegistrationFailure;
var UserRegistrationAttempt = (function () {
    function UserRegistrationAttempt(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.REGISTER_USER_ATTEMPT;
    }
    return UserRegistrationAttempt;
}());
exports.UserRegistrationAttempt = UserRegistrationAttempt;
var UserRegistrationSuccess = (function () {
    function UserRegistrationSuccess(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.REGISTER_USER_SUCCESS;
    }
    return UserRegistrationSuccess;
}());
exports.UserRegistrationSuccess = UserRegistrationSuccess;
var UpdateUserProfileAttempt = (function () {
    function UpdateUserProfileAttempt(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.EDIT_USER_PROFILE_ATTEMPT;
    }
    return UpdateUserProfileAttempt;
}());
exports.UpdateUserProfileAttempt = UpdateUserProfileAttempt;
var UpdateUserProfileFailure = (function () {
    function UpdateUserProfileFailure(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.EDIT_USER_PROFILE_FAILURE;
    }
    return UpdateUserProfileFailure;
}());
exports.UpdateUserProfileFailure = UpdateUserProfileFailure;
var UpdateUserProfileSuccess = (function () {
    function UpdateUserProfileSuccess(payload) {
        this.payload = payload;
        this.type = ProfileActionTypes.EDIT_USER_PROFILE_SUCCESS;
    }
    return UpdateUserProfileSuccess;
}());
exports.UpdateUserProfileSuccess = UpdateUserProfileSuccess;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kYXRhLWxheWVyL25ncngtZGF0YS9hY3Rpb25zL3Byb2ZpbGUuYWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLHNHQUEwRztBQUc3RixRQUFBLFlBQVksR0FBRyxrQkFBa0IsQ0FBQztBQUUvQztJQUVFLHFDQUFtQixPQUFjO1FBQWQsWUFBTyxHQUFQLE9BQU8sQ0FBTztRQURsQixTQUFJLEdBQUcsa0JBQWtCLENBQUMsK0JBQStCLENBQUM7SUFDbkMsQ0FBQztJQUN6QyxrQ0FBQztBQUFELENBSEEsQUFHQyxJQUFBO0FBSFksa0VBQTJCO0FBS3hDO0lBRUUscUNBQW1CLE9BQWtCO1FBQWxCLFlBQU8sR0FBUCxPQUFPLENBQVc7UUFEdEIsU0FBSSxHQUFHLGtCQUFrQixDQUFDLCtCQUErQixDQUFDO0lBQy9CLENBQUM7SUFDN0Msa0NBQUM7QUFBRCxDQUhBLEFBR0MsSUFBQTtBQUhZLGtFQUEyQjtBQU14QztJQUVFLHFDQUFtQixPQUFpQjtRQUFqQixZQUFPLEdBQVAsT0FBTyxDQUFVO1FBRHJCLFNBQUksR0FBRyxrQkFBa0IsQ0FBQywrQkFBK0IsQ0FBQztJQUNoQyxDQUFDO0lBQzVDLGtDQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSxrRUFBMkI7QUFNeEM7SUFBQTtRQUNpQixTQUFJLEdBQUksa0JBQWtCLENBQUMsNkJBQTZCLENBQUM7SUFDMUUsQ0FBQztJQUFELDBCQUFDO0FBQUQsQ0FGQSxBQUVDLElBQUE7QUFGWSxrREFBbUI7QUFJaEM7SUFFRSw4QkFBbUIsT0FBYztRQUFkLFlBQU8sR0FBUCxPQUFPLENBQU87UUFEbEIsU0FBSSxHQUFJLGtCQUFrQixDQUFDLHVCQUF1QixDQUFDO0lBQzVCLENBQUM7SUFDekMsMkJBQUM7QUFBRCxDQUhBLEFBR0MsSUFBQTtBQUhZLG9EQUFvQjtBQUtqQztJQUVFLCtCQUFtQixPQUFjO1FBQWQsWUFBTyxHQUFQLE9BQU8sQ0FBTztRQURsQixTQUFJLEdBQUksa0JBQWtCLENBQUMsd0JBQXdCLENBQUM7SUFDN0IsQ0FBQztJQUN6Qyw0QkFBQztBQUFELENBSEEsQUFHQyxJQUFBO0FBSFksc0RBQXFCO0FBS2xDO0lBRUUsK0JBQW1CLE9BQWtCO1FBQWxCLFlBQU8sR0FBUCxPQUFPLENBQVc7UUFEdEIsU0FBSSxHQUFJLGtCQUFrQixDQUFDLHdCQUF3QixDQUFDO0lBQ3pCLENBQUM7SUFDN0MsNEJBQUM7QUFBRCxDQUhBLEFBR0MsSUFBQTtBQUhZLHNEQUFxQjtBQU1sQztJQUVFLCtCQUFtQixPQUFpQjtRQUFqQixZQUFPLEdBQVAsT0FBTyxDQUFVO1FBRHJCLFNBQUksR0FBSSxrQkFBa0IsQ0FBQyx3QkFBd0IsQ0FBQztJQUMxQixDQUFDO0lBQzVDLDRCQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSxzREFBcUI7QUFLbEM7SUFFRSxpQ0FBbUIsT0FBbUI7UUFBbkIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUQ3QixTQUFJLEdBQUksa0JBQWtCLENBQUMscUJBQXFCLENBQUM7SUFDZixDQUFDO0lBQzlDLDhCQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSwwREFBdUI7QUFNcEM7SUFFRSxpQ0FBbUIsT0FBMEI7UUFBMUIsWUFBTyxHQUFQLE9BQU8sQ0FBbUI7UUFEN0IsU0FBSSxHQUFJLGtCQUFrQixDQUFDLHFCQUFxQixDQUFDO0lBQ2YsQ0FBQztJQUNyRCw4QkFBQztBQUFELENBSEEsQUFHQyxJQUFBO0FBSFksMERBQXVCO0FBTXBDO0lBRUUsaUNBQW1CLE9BQVc7UUFBWCxZQUFPLEdBQVAsT0FBTyxDQUFJO1FBRGQsU0FBSSxHQUFJLGtCQUFrQixDQUFDLHFCQUFxQixDQUFDO0lBQy9CLENBQUM7SUFDckMsOEJBQUM7QUFBRCxDQUhBLEFBR0MsSUFBQTtBQUhZLDBEQUF1QjtBQUtwQztJQUVFLGtDQUFtQixPQUFrQjtRQUFsQixZQUFPLEdBQVAsT0FBTyxDQUFXO1FBRHRCLFNBQUksR0FBSSxrQkFBa0IsQ0FBQyx5QkFBeUIsQ0FBQztJQUMzQixDQUFDO0lBQzVDLCtCQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSw0REFBd0I7QUFLckM7SUFFRSxrQ0FBbUIsT0FBa0I7UUFBbEIsWUFBTyxHQUFQLE9BQU8sQ0FBVztRQUR0QixTQUFJLEdBQUksa0JBQWtCLENBQUMseUJBQXlCLENBQUM7SUFDM0IsQ0FBQztJQUM1QywrQkFBQztBQUFELENBSEEsQUFHQyxJQUFBO0FBSFksNERBQXdCO0FBTXJDO0lBRUUsa0NBQW1CLE9BQWlCO1FBQWpCLFlBQU8sR0FBUCxPQUFPLENBQVU7UUFEckIsU0FBSSxHQUFJLGtCQUFrQixDQUFDLHlCQUF5QixDQUFDO0lBQzNCLENBQUM7SUFDNUMsK0JBQUM7QUFBRCxDQUhBLEFBR0MsSUFBQTtBQUhZLDREQUF3QiIsImZpbGUiOiJhcHAvZGF0YS1sYXllci9uZ3J4LWRhdGEvYWN0aW9ucy9wcm9maWxlLmFjdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBVc2VyTW9kZWwsIFJlZ2lzdHJhdGlvbk1vZGVsLCBFcnJvck1vZGVsIH0gZnJvbSAnLi4vLi4vLi4vYnVzaW5lc3MtbGF5ZXIvbW9kZWxzL2luZGV4JztcbmltcG9ydCAqIGFzICBQcm9maWxlQWN0aW9uVHlwZXMgIGZyb20gJy4uLy4uLy4uL2J1c2luZXNzLWxheWVyL3NoYXJlZC10eXBlcy9hY3Rpb25zL3Byb2ZpbGUuYWN0aW9uLnR5cGVzJztcblxuXG5leHBvcnQgY29uc3QgUHJvZmlsZVR5cGVzID0gUHJvZmlsZUFjdGlvblR5cGVzO1xuXG5leHBvcnQgY2xhc3MgQ2hlY2tVc2VyUHJvZmlsZU5hbWVBdHRlbXB0IGltcGxlbWVudHMgQWN0aW9uIHtcbiBwdWJsaWMgcmVhZG9ubHkgdHlwZSA9IFByb2ZpbGVBY3Rpb25UeXBlcy5DSEVDS19VU0VSX1BST0ZJTEVfTkFNRV9BVFRFTVBUO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDpzdHJpbmcpIHsgIH1cbn1cblxuZXhwb3J0IGNsYXNzIENoZWNrVXNlclByb2ZpbGVOYW1lRmFpbHVyZSBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gcHVibGljIHJlYWRvbmx5IHR5cGUgPSBQcm9maWxlQWN0aW9uVHlwZXMuQ0hFQ0tfVVNFUl9QUk9GSUxFX05BTUVfRkFJTFVSRTtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6RXJyb3JNb2RlbCkgeyAgfVxufVxuXG5cbmV4cG9ydCBjbGFzcyBDaGVja1VzZXJQcm9maWxlTmFtZVN1Y2Nlc3MgaW1wbGVtZW50cyBBY3Rpb24ge1xuIHB1YmxpYyByZWFkb25seSB0eXBlID0gUHJvZmlsZUFjdGlvblR5cGVzLkNIRUNLX1VTRVJfUFJPRklMRV9OQU1FX1NVQ0NFU1M7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOlVzZXJNb2RlbCkgeyAgfVxufVxuXG5cbmV4cG9ydCBjbGFzcyBSZXNldFVzZXJOYW1lVmFpbGlkIGltcGxlbWVudHMgQWN0aW9uIHtcbiBwdWJsaWMgcmVhZG9ubHkgdHlwZSA9ICBQcm9maWxlQWN0aW9uVHlwZXMuUkVTRVRfVVNFUl9QUk9GSUxFX05BTUVfVkFMSUQ7XG59XG5cbmV4cG9ydCBjbGFzcyBTZXRQcm9maWxlU2VsZWN0ZWRJZCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gcHVibGljIHJlYWRvbmx5IHR5cGUgPSAgUHJvZmlsZUFjdGlvblR5cGVzLlNFVF9TRUxFQ1RFRF9QUk9GSUxFX0lEO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDpzdHJpbmcpIHsgIH1cbn1cblxuZXhwb3J0IGNsYXNzIEdldFVzZXJQcm9maWxlQXR0ZW1wdCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gcHVibGljIHJlYWRvbmx5IHR5cGUgPSAgUHJvZmlsZUFjdGlvblR5cGVzLkdFVF9VU0VSX1BST0ZJTEVfQVRURU1QVDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6c3RyaW5nKSB7ICB9XG59XG5cbmV4cG9ydCBjbGFzcyBHZXRVc2VyUHJvZmlsZUZhaWx1cmUgaW1wbGVtZW50cyBBY3Rpb24ge1xuIHB1YmxpYyByZWFkb25seSB0eXBlID0gIFByb2ZpbGVBY3Rpb25UeXBlcy5HRVRfVVNFUl9QUk9GSUxFX0ZBSUxVUkU7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOkVycm9yTW9kZWwpIHsgIH1cbn1cblxuXG5leHBvcnQgY2xhc3MgR2V0VXNlclByb2ZpbGVTdWNjZXNzIGltcGxlbWVudHMgQWN0aW9uIHtcbiBwdWJsaWMgcmVhZG9ubHkgdHlwZSA9ICBQcm9maWxlQWN0aW9uVHlwZXMuR0VUX1VTRVJfUFJPRklMRV9TVUNDRVNTO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDpVc2VyTW9kZWwpIHsgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFVzZXJSZWdpc3RyYXRpb25GYWlsdXJlIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9ICBQcm9maWxlQWN0aW9uVHlwZXMuUkVHSVNURVJfVVNFUl9GQUlMVVJFO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogRXJyb3JNb2RlbCkgeyAgfVxufVxuXG5cbmV4cG9ydCBjbGFzcyBVc2VyUmVnaXN0cmF0aW9uQXR0ZW1wdCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHB1YmxpYyByZWFkb25seSB0eXBlID0gIFByb2ZpbGVBY3Rpb25UeXBlcy5SRUdJU1RFUl9VU0VSX0FUVEVNUFQ7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBSZWdpc3RyYXRpb25Nb2RlbCkgeyAgfVxufVxuXG5cbmV4cG9ydCBjbGFzcyBVc2VyUmVnaXN0cmF0aW9uU3VjY2VzcyBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHB1YmxpYyByZWFkb25seSB0eXBlID0gIFByb2ZpbGVBY3Rpb25UeXBlcy5SRUdJU1RFUl9VU0VSX1NVQ0NFU1M7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOmFueSkgeyB9XG59XG5cbmV4cG9ydCBjbGFzcyBVcGRhdGVVc2VyUHJvZmlsZUF0dGVtcHQgaW1wbGVtZW50cyBBY3Rpb24ge1xuIHB1YmxpYyByZWFkb25seSB0eXBlID0gIFByb2ZpbGVBY3Rpb25UeXBlcy5FRElUX1VTRVJfUFJPRklMRV9BVFRFTVBUO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogVXNlck1vZGVsKSB7IH1cbn1cblxuZXhwb3J0IGNsYXNzIFVwZGF0ZVVzZXJQcm9maWxlRmFpbHVyZSAgaW1wbGVtZW50cyBBY3Rpb24ge1xuIHB1YmxpYyByZWFkb25seSB0eXBlID0gIFByb2ZpbGVBY3Rpb25UeXBlcy5FRElUX1VTRVJfUFJPRklMRV9GQUlMVVJFO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogVXNlck1vZGVsKSB7IH1cbn1cblxuXG5leHBvcnQgY2xhc3MgVXBkYXRlVXNlclByb2ZpbGVTdWNjZXNzIGltcGxlbWVudHMgQWN0aW9uIHtcbiBwdWJsaWMgcmVhZG9ubHkgdHlwZSA9ICBQcm9maWxlQWN0aW9uVHlwZXMuRURJVF9VU0VSX1BST0ZJTEVfU1VDQ0VTUztcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6VXNlck1vZGVsKSB7ICB9XG59XG5cblxuXG5leHBvcnQgdHlwZSBBY3Rpb25zID1cbkNoZWNrVXNlclByb2ZpbGVOYW1lQXR0ZW1wdFxuICAgICB8IENoZWNrVXNlclByb2ZpbGVOYW1lRmFpbHVyZVxuICAgICB8IENoZWNrVXNlclByb2ZpbGVOYW1lU3VjY2Vzc1xuICAgICB8IFJlc2V0VXNlck5hbWVWYWlsaWRcbiAgICAgfCBTZXRQcm9maWxlU2VsZWN0ZWRJZFxuICAgICB8IEdldFVzZXJQcm9maWxlQXR0ZW1wdFxuICAgICB8IEdldFVzZXJQcm9maWxlRmFpbHVyZVxuICAgICB8IEdldFVzZXJQcm9maWxlU3VjY2Vzc1xuICAgICB8IFVwZGF0ZVVzZXJQcm9maWxlQXR0ZW1wdFxuICAgICB8IFVwZGF0ZVVzZXJQcm9maWxlRmFpbHVyZVxuICAgICB8IFVwZGF0ZVVzZXJQcm9maWxlU3VjY2Vzc1xuICAgICB8IFVzZXJSZWdpc3RyYXRpb25GYWlsdXJlXG4gICAgIHwgVXNlclJlZ2lzdHJhdGlvbkF0dGVtcHRcbiAgICAgfCBVc2VyUmVnaXN0cmF0aW9uU3VjY2VzcztcblxuXG5cblxuXG4iXX0=
