"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LayoutActionTypes = require("../../../../business-layer/shared-types/actions/layout.action.types");
var initialState = {
    showLoginDialog: false,
    requestedURL: ''
};
function reducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case LayoutActionTypes.HIDE_LOGIN_DIALOG: {
            return {
                showLoginDialog: false,
                requestedURL: ''
            };
        }
        case LayoutActionTypes.SHOW_LOGIN_DIALOG: {
            return {
                showLoginDialog: true,
                requestedURL: state.requestedURL
            };
        }
        case LayoutActionTypes.SET_REQUESTED_URL: {
            return {
                showLoginDialog: state.showLoginDialog,
                requestedURL: action.payload
            };
        }
        case LayoutActionTypes.SHOW_LOGIN_DIALOG_SET_REQUESTED_URL: {
            return {
                showLoginDialog: true,
                requestedURL: action.payload
            };
        }
        default:
            return state;
    }
}
exports.reducer = reducer;
exports.getShowLoginDialog = function (state) { return state.showLoginDialog; };
exports.getRequestedURL = function (state) { return state.requestedURL; };

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kYXRhLWxheWVyL25ncngtZGF0YS9yZWR1Y2Vycy9sYXlvdXQvbGF5b3V0LnJlZHVjZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx1R0FBeUc7QUFRekcsSUFBTSxZQUFZLEdBQVU7SUFDMUIsZUFBZSxFQUFFLEtBQUs7SUFDdEIsWUFBWSxFQUFDLEVBQUU7Q0FDaEIsQ0FBQztBQUVGLGlCQUF3QixLQUFvQixFQUFFLE1BQXNCO0lBQTVDLHNCQUFBLEVBQUEsb0JBQW9CO0lBQzFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLEtBQUssaUJBQWlCLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztZQUN6QyxNQUFNLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLEtBQUs7Z0JBQ3RCLFlBQVksRUFBQyxFQUFFO2FBQ2hCLENBQUM7UUFDSixDQUFDO1FBQ0QsS0FBSyxpQkFBaUIsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1lBQ3pDLE1BQU0sQ0FBQztnQkFDTCxlQUFlLEVBQUUsSUFBSTtnQkFDckIsWUFBWSxFQUFDLEtBQUssQ0FBQyxZQUFZO2FBQ2hDLENBQUM7UUFDSixDQUFDO1FBRUQsS0FBSyxpQkFBaUIsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1lBQ3pDLE1BQU0sQ0FBQztnQkFDTCxlQUFlLEVBQUUsS0FBSyxDQUFDLGVBQWU7Z0JBQ3RDLFlBQVksRUFBQyxNQUFNLENBQUMsT0FBTzthQUM1QixDQUFDO1FBQ0osQ0FBQztRQUVELEtBQUssaUJBQWlCLENBQUMsbUNBQW1DLEVBQUUsQ0FBQztZQUMzRCxNQUFNLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLElBQUk7Z0JBQ3JCLFlBQVksRUFBQyxNQUFNLENBQUMsT0FBTzthQUM1QixDQUFDO1FBQ0osQ0FBQztRQUdEO1lBQ0UsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNqQixDQUFDO0FBQ0gsQ0FBQztBQWpDRCwwQkFpQ0M7QUFFWSxRQUFBLGtCQUFrQixHQUFHLFVBQUMsS0FBWSxJQUFLLE9BQUEsS0FBSyxDQUFDLGVBQWUsRUFBckIsQ0FBcUIsQ0FBQztBQUM3RCxRQUFBLGVBQWUsR0FBRyxVQUFDLEtBQVksSUFBSyxPQUFBLEtBQUssQ0FBQyxZQUFZLEVBQWxCLENBQWtCLENBQUMiLCJmaWxlIjoiYXBwL2RhdGEtbGF5ZXIvbmdyeC1kYXRhL3JlZHVjZXJzL2xheW91dC9sYXlvdXQucmVkdWNlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGxheW91dCBmcm9tICcuLi8uLi9hY3Rpb25zL2xheW91dC5hY3Rpb25zJztcbmltcG9ydCAqIGFzIExheW91dEFjdGlvblR5cGVzIGZyb20gJy4uLy4uLy4uLy4uL2J1c2luZXNzLWxheWVyL3NoYXJlZC10eXBlcy9hY3Rpb25zL2xheW91dC5hY3Rpb24udHlwZXMnO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RhdGUge1xuICBzaG93TG9naW5EaWFsb2c6Ym9vbGVhbjtcbiAgcmVxdWVzdGVkVVJMOnN0cmluZztcbn1cblxuY29uc3QgaW5pdGlhbFN0YXRlOiBTdGF0ZSA9IHtcbiAgc2hvd0xvZ2luRGlhbG9nOiBmYWxzZSxcbiAgcmVxdWVzdGVkVVJMOicnXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gcmVkdWNlcihzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uOiBsYXlvdXQuQWN0aW9ucyk6IFN0YXRlIHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgTGF5b3V0QWN0aW9uVHlwZXMuSElERV9MT0dJTl9ESUFMT0c6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNob3dMb2dpbkRpYWxvZzogZmFsc2UsXG4gICAgICAgIHJlcXVlc3RlZFVSTDonJ1xuICAgICAgfTtcbiAgICB9XG4gICAgY2FzZSBMYXlvdXRBY3Rpb25UeXBlcy5TSE9XX0xPR0lOX0RJQUxPRzoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc2hvd0xvZ2luRGlhbG9nOiB0cnVlLFxuICAgICAgICByZXF1ZXN0ZWRVUkw6c3RhdGUucmVxdWVzdGVkVVJMXG4gICAgICB9O1xuICAgIH1cblxuICAgIGNhc2UgTGF5b3V0QWN0aW9uVHlwZXMuU0VUX1JFUVVFU1RFRF9VUkw6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNob3dMb2dpbkRpYWxvZzogc3RhdGUuc2hvd0xvZ2luRGlhbG9nLFxuICAgICAgICByZXF1ZXN0ZWRVUkw6YWN0aW9uLnBheWxvYWRcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY2FzZSBMYXlvdXRBY3Rpb25UeXBlcy5TSE9XX0xPR0lOX0RJQUxPR19TRVRfUkVRVUVTVEVEX1VSTDoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc2hvd0xvZ2luRGlhbG9nOiB0cnVlLFxuICAgICAgICByZXF1ZXN0ZWRVUkw6YWN0aW9uLnBheWxvYWRcbiAgICAgIH07XG4gICAgfVxuXG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBnZXRTaG93TG9naW5EaWFsb2cgPSAoc3RhdGU6IFN0YXRlKSA9PiBzdGF0ZS5zaG93TG9naW5EaWFsb2c7XG5leHBvcnQgY29uc3QgZ2V0UmVxdWVzdGVkVVJMID0gKHN0YXRlOiBTdGF0ZSkgPT4gc3RhdGUucmVxdWVzdGVkVVJMO1xuXG4iXX0=
