"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PortalActionTypes = require("../../../../business-layer/shared-types/actions/portal.action.types");
var initialState = {
    garmentAddLock: false,
    viewablePerPage: 10,
    revealAddGarmentRow: false,
    currentPage: 1,
    totalPages: 5,
    sortDirection: 'Ascending',
    sortBase: 'Name',
};
function reducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case PortalActionTypes.UPDATE_VIEWABLE_PER_PAGE_COUNT: {
            return Object.assign({}, state, { viewablePerPage: action.payload });
        }
        case PortalActionTypes.SET_CURRENT_PAGE_NUMBER: {
            return Object.assign({}, state, { currentPage: action.payload });
        }
        case PortalActionTypes.SET_GARMENT_ADD_BTN_STATUS: {
            return Object.assign({}, state, { garmentAddLock: action.payload });
        }
        case PortalActionTypes.UPDATE_REVEAL_GARMENT_ADD_ROW: {
            return Object.assign({}, state, { revealAddGarmentRow: action.payload, garmentAddLock: action.payload });
        }
        case PortalActionTypes.UPDATE_SORT_STATE: {
            var sortRequest = (action.payload);
            return Object.assign({}, state, { sortDirection: !sortRequest.directionChange ?
                    state.sortDirection : (state.sortDirection === 'Ascending') ?
                    'Descending' : 'Ascending',
                sortBase: sortRequest.base ? sortRequest.base : state.sortBase });
        }
        default:
            return state;
    }
}
exports.reducer = reducer;
exports.getRevealAddGarmentRow = function (state) { return state.revealAddGarmentRow; };
exports.getViewablePerPage = function (state) { return state.viewablePerPage; };
exports.getCurrentPage = function (state) { return state.currentPage; };
exports.getSortType = function (state) { return state.sortDirection; };
exports.getSortBase = function (state) { return state.sortBase; };
exports.getGarmentAddLock = function (state) { return state.garmentAddLock; };
exports.getSortState = function (state) { return Object.assign({}, { sortDirection: state.sortDirection, sortBase: state.sortBase }); };

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kYXRhLWxheWVyL25ncngtZGF0YS9yZWR1Y2Vycy9wb3J0YWwvcG9ydGFsLnJlZHVjZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx1R0FBeUc7QUFjekcsSUFBTSxZQUFZLEdBQVU7SUFDMUIsY0FBYyxFQUFDLEtBQUs7SUFDcEIsZUFBZSxFQUFDLEVBQUU7SUFDbEIsbUJBQW1CLEVBQUMsS0FBSztJQUN6QixXQUFXLEVBQUMsQ0FBQztJQUNiLFVBQVUsRUFBQyxDQUFDO0lBQ1osYUFBYSxFQUFDLFdBQVc7SUFDekIsUUFBUSxFQUFDLE1BQU07Q0FDaEIsQ0FBQztBQUVGLGlCQUF3QixLQUFvQixFQUFFLE1BQXNCO0lBQTVDLHNCQUFBLEVBQUEsb0JBQW9CO0lBQzFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLEtBQUssaUJBQWlCLENBQUMsOEJBQThCLEVBQUUsQ0FBQztZQUNwRCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsS0FBSyxFQUFJLEVBQUMsZUFBZSxFQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDO1FBQ3hFLENBQUM7UUFDRCxLQUFLLGlCQUFpQixDQUFDLHVCQUF1QixFQUFFLENBQUM7WUFDN0MsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLEtBQUssRUFBSSxFQUFDLFdBQVcsRUFBQyxNQUFNLENBQUMsT0FBTyxFQUFDLENBQUMsQ0FBQztRQUNwRSxDQUFDO1FBRUQsS0FBSyxpQkFBaUIsQ0FBQywwQkFBMEIsRUFBRSxDQUFDO1lBQ2hELE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUksRUFBQyxjQUFjLEVBQUMsTUFBTSxDQUFDLE9BQU8sRUFBQyxDQUFDLENBQUM7UUFDdkUsQ0FBQztRQUNELEtBQUssaUJBQWlCLENBQUMsNkJBQTZCLEVBQUUsQ0FBQztZQUNyRCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsS0FBSyxFQUFJLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxjQUFjLEVBQUMsTUFBTSxDQUFDLE9BQU8sRUFBQyxDQUFDLENBQUM7UUFDekcsQ0FBQztRQUNELEtBQUssaUJBQWlCLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztZQUN6QyxJQUFNLFdBQVcsR0FBc0MsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFeEUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLEtBQUssRUFBSSxFQUFDLGFBQWEsRUFBQyxDQUFDLFdBQVcsQ0FBQyxlQUFlO29CQUM1QixLQUFLLENBQUMsYUFBYSxHQUFDLENBQUMsS0FBSyxDQUFDLGFBQWEsS0FBRyxXQUFXLENBQUM7b0JBQ3ZELFlBQVksR0FBQyxXQUFXO2dCQUV0QyxRQUFRLEVBQUMsV0FBVyxDQUFDLElBQUksR0FBQyxXQUFXLENBQUMsSUFBSSxHQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQ2xHLENBQUM7UUFFRDtZQUNFLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDakIsQ0FBQztBQUNILENBQUM7QUE1QkQsMEJBNEJDO0FBRVksUUFBQSxzQkFBc0IsR0FBRSxVQUFDLEtBQVksSUFBSyxPQUFBLEtBQUssQ0FBQyxtQkFBbUIsRUFBekIsQ0FBeUIsQ0FBQztBQUNwRSxRQUFBLGtCQUFrQixHQUFHLFVBQUMsS0FBWSxJQUFLLE9BQUEsS0FBSyxDQUFDLGVBQWUsRUFBckIsQ0FBcUIsQ0FBQztBQUM3RCxRQUFBLGNBQWMsR0FBRyxVQUFDLEtBQVksSUFBSyxPQUFBLEtBQUssQ0FBQyxXQUFXLEVBQWpCLENBQWlCLENBQUM7QUFDckQsUUFBQSxXQUFXLEdBQUcsVUFBQyxLQUFZLElBQUssT0FBQSxLQUFLLENBQUMsYUFBYSxFQUFuQixDQUFtQixDQUFDO0FBQ3BELFFBQUEsV0FBVyxHQUFHLFVBQUMsS0FBWSxJQUFLLE9BQUEsS0FBSyxDQUFDLFFBQVEsRUFBZCxDQUFjLENBQUM7QUFDL0MsUUFBQSxpQkFBaUIsR0FBRSxVQUFDLEtBQVksSUFBSyxPQUFBLEtBQUssQ0FBQyxjQUFjLEVBQXBCLENBQW9CLENBQUM7QUFDMUQsUUFBQSxZQUFZLEdBQUcsVUFBQyxLQUFZLElBQUssT0FBQSxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBQyxFQUFDLGFBQWEsRUFBQyxLQUFLLENBQUMsYUFBYSxFQUFFLFFBQVEsRUFBQyxLQUFLLENBQUMsUUFBUSxFQUFDLENBQUMsRUFBOUUsQ0FBOEUsQ0FBQyIsImZpbGUiOiJhcHAvZGF0YS1sYXllci9uZ3J4LWRhdGEvcmVkdWNlcnMvcG9ydGFsL3BvcnRhbC5yZWR1Y2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcG9ydGFsIGZyb20gJy4uLy4uL2FjdGlvbnMvcG9ydGFsLmFjdGlvbnMnO1xuaW1wb3J0ICogYXMgUG9ydGFsQWN0aW9uVHlwZXMgZnJvbSAnLi4vLi4vLi4vLi4vYnVzaW5lc3MtbGF5ZXIvc2hhcmVkLXR5cGVzL2FjdGlvbnMvcG9ydGFsLmFjdGlvbi50eXBlcyc7XG5pbXBvcnQgeyBTb3J0UmVxdWVzdE1vZGVsIH0gZnJvbSAnLi4vLi4vLi4vLi4vYnVzaW5lc3MtbGF5ZXIvbW9kZWxzL3NvcnRSZXF1ZXN0Lm1vZGVsJztcblxuXG5leHBvcnQgaW50ZXJmYWNlIFN0YXRlIHtcbiAgIGdhcm1lbnRBZGRMb2NrOmJvb2xlYW47XG4gIHZpZXdhYmxlUGVyUGFnZTpudW1iZXI7XG4gIHJldmVhbEFkZEdhcm1lbnRSb3c6Ym9vbGVhbixcbiAgY3VycmVudFBhZ2U6bnVtYmVyO1xuICB0b3RhbFBhZ2VzOm51bWJlcjtcbiAgc29ydERpcmVjdGlvbjpzdHJpbmc7XG4gIHNvcnRCYXNlOnN0cmluZztcbn1cblxuY29uc3QgaW5pdGlhbFN0YXRlOiBTdGF0ZSA9IHtcbiAgZ2FybWVudEFkZExvY2s6ZmFsc2UsXG4gIHZpZXdhYmxlUGVyUGFnZToxMCxcbiAgcmV2ZWFsQWRkR2FybWVudFJvdzpmYWxzZSxcbiAgY3VycmVudFBhZ2U6MSxcbiAgdG90YWxQYWdlczo1LFxuICBzb3J0RGlyZWN0aW9uOidBc2NlbmRpbmcnLFxuICBzb3J0QmFzZTonTmFtZScsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gcmVkdWNlcihzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uOiBwb3J0YWwuQWN0aW9ucyk6IFN0YXRlIHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgUG9ydGFsQWN0aW9uVHlwZXMuVVBEQVRFX1ZJRVdBQkxFX1BFUl9QQUdFX0NPVU5UOiB7XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgICB7dmlld2FibGVQZXJQYWdlOmFjdGlvbi5wYXlsb2FkfSk7XG4gICAgfVxuICAgIGNhc2UgUG9ydGFsQWN0aW9uVHlwZXMuU0VUX0NVUlJFTlRfUEFHRV9OVU1CRVI6IHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCAgIHtjdXJyZW50UGFnZTphY3Rpb24ucGF5bG9hZH0pO1xuICAgIH1cblxuICAgIGNhc2UgUG9ydGFsQWN0aW9uVHlwZXMuU0VUX0dBUk1FTlRfQUREX0JUTl9TVEFUVVM6IHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCAgIHtnYXJtZW50QWRkTG9jazphY3Rpb24ucGF5bG9hZH0pO1xuICAgIH1cbiAgICBjYXNlIFBvcnRhbEFjdGlvblR5cGVzLlVQREFURV9SRVZFQUxfR0FSTUVOVF9BRERfUk9XOiB7XG4gICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsICAge3JldmVhbEFkZEdhcm1lbnRSb3c6YWN0aW9uLnBheWxvYWQsIGdhcm1lbnRBZGRMb2NrOmFjdGlvbi5wYXlsb2FkfSk7XG4gICAgfVxuICAgIGNhc2UgUG9ydGFsQWN0aW9uVHlwZXMuVVBEQVRFX1NPUlRfU1RBVEU6IHtcbiAgICAgIGNvbnN0IHNvcnRSZXF1ZXN0OlNvcnRSZXF1ZXN0TW9kZWwgPSA8U29ydFJlcXVlc3RNb2RlbD4oYWN0aW9uLnBheWxvYWQpO1xuXG4gICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsICAge3NvcnREaXJlY3Rpb246IXNvcnRSZXF1ZXN0LmRpcmVjdGlvbkNoYW5nZT9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5zb3J0RGlyZWN0aW9uOihzdGF0ZS5zb3J0RGlyZWN0aW9uPT09J0FzY2VuZGluZycpP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdEZXNjZW5kaW5nJzonQXNjZW5kaW5nJyxcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3J0QmFzZTpzb3J0UmVxdWVzdC5iYXNlP3NvcnRSZXF1ZXN0LmJhc2U6c3RhdGUuc29ydEJhc2UgfSk7XG4gICAgfVxuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0UmV2ZWFsQWRkR2FybWVudFJvdz0gKHN0YXRlOiBTdGF0ZSkgPT4gc3RhdGUucmV2ZWFsQWRkR2FybWVudFJvdztcbmV4cG9ydCBjb25zdCBnZXRWaWV3YWJsZVBlclBhZ2UgPSAoc3RhdGU6IFN0YXRlKSA9PiBzdGF0ZS52aWV3YWJsZVBlclBhZ2U7XG5leHBvcnQgY29uc3QgZ2V0Q3VycmVudFBhZ2UgPSAoc3RhdGU6IFN0YXRlKSA9PiBzdGF0ZS5jdXJyZW50UGFnZTtcbmV4cG9ydCBjb25zdCBnZXRTb3J0VHlwZSA9IChzdGF0ZTogU3RhdGUpID0+IHN0YXRlLnNvcnREaXJlY3Rpb247XG5leHBvcnQgY29uc3QgZ2V0U29ydEJhc2UgPSAoc3RhdGU6IFN0YXRlKSA9PiBzdGF0ZS5zb3J0QmFzZTtcbmV4cG9ydCBjb25zdCBnZXRHYXJtZW50QWRkTG9jaz0gKHN0YXRlOiBTdGF0ZSkgPT4gc3RhdGUuZ2FybWVudEFkZExvY2s7XG5leHBvcnQgY29uc3QgZ2V0U29ydFN0YXRlID0gKHN0YXRlOiBTdGF0ZSkgPT4gT2JqZWN0LmFzc2lnbih7fSx7c29ydERpcmVjdGlvbjpzdGF0ZS5zb3J0RGlyZWN0aW9uLCBzb3J0QmFzZTpzdGF0ZS5zb3J0QmFzZX0pO1xuXG4iXX0=
