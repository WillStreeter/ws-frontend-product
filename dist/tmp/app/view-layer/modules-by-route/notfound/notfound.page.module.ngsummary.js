import * as i0 from './notfound.page.module';
import * as i1 from '@angular/material';
import * as i2 from '../../../../node_modules/@angular/material/typings/index.ngfactory';
import * as i3 from './notfound.page.component';
import * as i4 from './notfound.page.component.ngfactory';
import * as i5 from '@angular/platform-browser';
import * as i6 from '@angular/core';
import * as i7 from '@angular/common';
import * as i8 from '@angular/forms';
import * as i9 from '@angular/http';
import * as i10 from '@angular/router';
import * as i11 from './notfound.page.routing.module';
import * as i12 from './notfound.page.component.ngsummary';
import * as i13 from '../../../../node_modules/@angular/material/typings/index.ngsummary';
import * as i14 from '../../../../node_modules/@angular/common/common.ngsummary';
import * as i15 from '../../../../node_modules/@angular/forms/forms.ngsummary';
import * as i16 from '../../../../node_modules/@angular/router/router.ngsummary';
import * as i17 from './notfound.page.routing.module.ngsummary';
export function NotfoundPageModuleNgSummary() {
    return [{ summaryKind: 2, type: { reference: i0.NotfoundPageModule, diDeps: [],
                lifecycleHooks: [] }, entryComponents: [{ componentType: i1.MdDialogContainer,
                    componentFactory: i2.MdDialogContainerNgFactory }, { componentType: i1.MdDatepickerContent,
                    componentFactory: i2.MdDatepickerContentNgFactory }, { componentType: i1.MdSnackBarContainer,
                    componentFactory: i2.MdSnackBarContainerNgFactory }, { componentType: i1.SimpleSnackBar,
                    componentFactory: i2.SimpleSnackBarNgFactory }, { componentType: i1.TooltipComponent,
                    componentFactory: i2.TooltipComponentNgFactory }, { componentType: i3.NotfoundPageComponent,
                    componentFactory: i4.NotfoundPageComponentNgFactory }], providers: [{ provider: { token: { identifier: { reference: i1.MATERIAL_SANITY_CHECKS } },
                        useClass: null, useValue: true, useFactory: null, useExisting: undefined,
                        deps: undefined, multi: false }, module: { reference: i1.CompatibilityModule,
                        diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i5.DOCUMENT } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i1.MATERIAL_SANITY_CHECKS } } }],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.Platform,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i1.Platform,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [], multi: false },
                    module: { reference: i1.PlatformModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ScrollDispatcher } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵd, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ScrollDispatcher } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.NgZone } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ScrollDispatcher } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i6.NgZone } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                        multi: false }, module: { reference: i1.ɵm, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ɵo } }, useClass: null, useValue: undefined,
                        useFactory: { reference: i1.ɵp, diDeps: [{ isAttribute: false, isHost: false, isSelf: false,
                                    isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ɵo } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.ɵo } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i1.MdRippleModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i7.NgLocalization } }, useClass: { reference: i7.NgLocaleLocalization,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.LOCALE_ID } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i6.LOCALE_ID } } }], multi: false }, module: { reference: i7.CommonModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.Overlay,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.OverlayContainer } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.ComponentFactoryResolver } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.ɵr } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.ApplicationRef } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i6.Injector } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.NgZone } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.Overlay, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.OverlayContainer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.ComponentFactoryResolver } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ɵr } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.ApplicationRef } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.Injector } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.NgZone } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.OverlayContainer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.ComponentFactoryResolver } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ɵr } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.ApplicationRef } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i6.Injector } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.NgZone } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ɵr, diDeps: [{ isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ɵo } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.ɵr, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ɵo } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ɵo } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ɵo } }, useClass: null, useValue: undefined,
                        useFactory: { reference: i1.ɵp, diDeps: [{ isAttribute: false, isHost: false, isSelf: false,
                                    isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ɵo } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.ɵo } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.OverlayContainer } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵb, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.OverlayContainer } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.OverlayContainer } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.FocusOriginMonitor } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.FocusOriginMonitor } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.NgZone } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.FocusOriginMonitor } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.StyleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i8.ɵi,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i8.ɵi,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i8.FormsModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.UniqueSelectionDispatcher } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵh, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }],
                        multi: false }, module: { reference: i1.MdButtonToggleModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.FocusOriginMonitor,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i6.NgZone } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.FocusOriginMonitor,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.NgZone } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.MdCheckboxModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.InteractivityChecker,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.Platform } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.InteractivityChecker, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                        multi: false }, module: { reference: i1.A11yModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.FocusTrapFactory, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.InteractivityChecker } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i6.NgZone } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.FocusTrapFactory, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.InteractivityChecker } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.NgZone } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.InteractivityChecker } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.NgZone } } }],
                        multi: false }, module: { reference: i1.A11yModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.LiveAnnouncer } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵg, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.LiveAnnouncer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                    token: { identifier: { reference: i1.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.LiveAnnouncer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i1.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.A11yModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdDialog,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.Overlay } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.Injector } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                        token: { identifier: { reference: i7.Location } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdDialog } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.MdDialog, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Overlay } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.Injector } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i7.Location } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                    token: { identifier: { reference: i1.MdDialog } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Overlay } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.Injector } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i7.Location } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdDialog } } }],
                        multi: false }, module: { reference: i1.MdDialogModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.MdDatepickerIntl, diDeps: [],
                                lifecycleHooks: [] } }, useClass: { reference: i1.MdDatepickerIntl, diDeps: [],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [], multi: false }, module: { reference: i1.MdDatepickerModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdIconRegistry } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ICON_REGISTRY_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.MdIconRegistry } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                    token: { identifier: { reference: i9.Http } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.DomSanitizer } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdIconRegistry } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i9.Http } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.DomSanitizer } } }],
                        multi: false }, module: { reference: i1.MdIconModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.UniqueSelectionDispatcher } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵh, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }],
                        multi: false }, module: { reference: i1.MdRadioModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ɵo } }, useClass: null, useValue: undefined,
                        useFactory: { reference: i1.ɵp, diDeps: [{ isAttribute: false, isHost: false, isSelf: false,
                                    isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ɵo } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.ɵo } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i1.MdRadioModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.FocusOriginMonitor, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.NgZone } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.Platform } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.FocusOriginMonitor, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.NgZone } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i6.NgZone } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                        multi: false }, module: { reference: i1.MdRadioModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i5.HAMMER_GESTURE_CONFIG } }, useClass: { reference: i1.GestureConfig,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i1.MdSliderModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.FocusOriginMonitor } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.FocusOriginMonitor } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i6.NgZone } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.FocusOriginMonitor } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.MdSlideToggleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i5.HAMMER_GESTURE_CONFIG } },
                        useClass: { reference: i1.GestureConfig, diDeps: [], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [], multi: false }, module: { reference: i1.MdSlideToggleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdSnackBar,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.Overlay } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.LiveAnnouncer } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                        token: { identifier: { reference: i1.MdSnackBar } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.MdSnackBar, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Overlay } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.LiveAnnouncer } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdSnackBar } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Overlay } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.LiveAnnouncer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdSnackBar } } }],
                        multi: false }, module: { reference: i1.MdSnackBarModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.LiveAnnouncer } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵg,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.LiveAnnouncer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                    token: { identifier: { reference: i1.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.LiveAnnouncer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i1.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.MdSnackBarModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ɵa,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i1.ɵa,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i1.ObserveContentModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ɵo } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵp,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.ɵo } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ɵo } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ScrollDispatcher } } }], multi: false },
                    module: { reference: i1.MdTabsModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i10.ROUTES } }, useClass: null,
                        useValue: [{ path: '**', component: i3.NotfoundPageComponent }], useFactory: null,
                        useExisting: undefined, deps: undefined, multi: true }, module: { reference: i11.NotfoundPageRoutingModule,
                        diDeps: [], lifecycleHooks: [] } }], modules: [{ reference: i1.CompatibilityModule,
                    diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                            token: { identifier: { reference: i5.DOCUMENT } } }, { isAttribute: false, isHost: false,
                            isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i1.MATERIAL_SANITY_CHECKS } } }],
                    lifecycleHooks: [] }, { reference: i1.MdCommonModule, diDeps: [],
                    lifecycleHooks: [] }, { reference: i1.PlatformModule, diDeps: [],
                    lifecycleHooks: [] }, { reference: i1.ɵm, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdRippleModule, diDeps: [], lifecycleHooks: [] },
                { reference: i7.CommonModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdSelectionModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdOptionModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.PortalModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdAutocompleteModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.StyleModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.MdButtonModule, diDeps: [], lifecycleHooks: [] },
                { reference: i8.ɵba, diDeps: [], lifecycleHooks: [] }, { reference: i8.FormsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdButtonToggleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdCardModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdChipsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdCheckboxModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.A11yModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdDialogModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdDatepickerModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdLineModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdGridListModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdIconModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdInputModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdListModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdMenuModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdProgressBarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdProgressSpinnerModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdRadioModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSelectModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSidenavModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.RtlModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSliderModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSlideToggleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSnackBarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.ObserveContentModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdTabsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdToolbarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdTooltipModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MaterialModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i10.RouterModule,
                    diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                            token: { identifier: { reference: i10.ɵa } } }, { isAttribute: false, isHost: false,
                            isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i10.Router } } }],
                    lifecycleHooks: [] }, { reference: i11.NotfoundPageRoutingModule, diDeps: [],
                    lifecycleHooks: [] }, { reference: i0.NotfoundPageModule, diDeps: [],
                    lifecycleHooks: [] }], exportedDirectives: [{ reference: i3.NotfoundPageComponent }],
            exportedPipes: [] }, i12.NotfoundPageComponentNgSummary, i13.CompatibilityModuleNgSummary,
        i13.MdCommonModuleNgSummary, i13.PlatformModuleNgSummary, i13.ɵmNgSummary, i13.MdRippleModuleNgSummary,
        i14.CommonModuleNgSummary, i13.MdSelectionModuleNgSummary, i13.MdOptionModuleNgSummary,
        i13.PortalModuleNgSummary, i13.OverlayModuleNgSummary, i13.MdAutocompleteModuleNgSummary,
        i13.StyleModuleNgSummary, i13.MdButtonModuleNgSummary, i15.ɵbaNgSummary, i15.FormsModuleNgSummary,
        i13.MdButtonToggleModuleNgSummary, i13.MdCardModuleNgSummary, i13.MdChipsModuleNgSummary,
        i13.MdCheckboxModuleNgSummary, i13.A11yModuleNgSummary, i13.MdDialogModuleNgSummary,
        i13.MdDatepickerModuleNgSummary, i13.MdLineModuleNgSummary, i13.MdGridListModuleNgSummary,
        i13.MdIconModuleNgSummary, i13.MdInputModuleNgSummary, i13.MdListModuleNgSummary,
        i13.MdMenuModuleNgSummary, i13.MdProgressBarModuleNgSummary, i13.MdProgressSpinnerModuleNgSummary,
        i13.MdRadioModuleNgSummary, i13.MdSelectModuleNgSummary, i13.MdSidenavModuleNgSummary,
        i13.RtlModuleNgSummary, i13.MdSliderModuleNgSummary, i13.MdSlideToggleModuleNgSummary,
        i13.MdSnackBarModuleNgSummary, i13.ObserveContentModuleNgSummary, i13.MdTabsModuleNgSummary,
        i13.MdToolbarModuleNgSummary, i13.MdTooltipModuleNgSummary, i13.MaterialModuleNgSummary,
        i16.RouterModuleNgSummary, i17.NotfoundPageRoutingModuleNgSummary];
}
