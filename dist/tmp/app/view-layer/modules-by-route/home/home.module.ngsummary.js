import * as i0 from './home.module';
import * as i1 from './home.component';
import * as i2 from './home.component.ngfactory';
import * as i3 from '@angular/material';
import * as i4 from '../../../../node_modules/@angular/material/typings/index.ngfactory';
import * as i5 from '@angular/router';
import * as i6 from './home.routing.module';
import * as i7 from '@angular/forms';
import * as i8 from '@angular/common';
import * as i9 from '@angular/core';
import * as i10 from '@angular/platform-browser';
import * as i11 from '@angular/http';
import * as i12 from '@angular/flex-layout/media-query/match-media';
import * as i13 from '@angular/flex-layout/media-query/_module';
import * as i14 from '@angular/flex-layout/media-query/breakpoints/break-points';
import * as i15 from '@angular/flex-layout/media-query/breakpoints/break-point-registry';
import * as i16 from '@angular/flex-layout/media-query/media-monitor';
import * as i17 from '@angular/flex-layout/media-query/observable-media-service';
import * as i18 from '@angular/flex-layout/flexbox/_module';
import * as i19 from '../../../business-layer/validators/services/validation.service';
import * as i20 from '../../common-views/garmentGrid/garment.grid.module';
import * as i21 from '../../common-views/grid-masthead/grid.masthead.module';
import * as i22 from '../../common-views/search-ahead/search.ahead.module';
import * as i23 from '../../common-views/paginator-toolbar/paginator.toolbar.module';
import * as i24 from '@angular/flex-layout/flexbox/api/layout';
import * as i25 from '@angular/flex-layout/flexbox/api/layout-wrap';
import * as i26 from '@angular/flex-layout/flexbox/api/layout-gap';
import * as i27 from '@angular/flex-layout/flexbox/api/layout-align';
import * as i28 from '@angular/flex-layout/flexbox/api/flex';
import * as i29 from '@angular/flex-layout/flexbox/api/flex-order';
import * as i30 from '@angular/flex-layout/flexbox/api/flex-offset';
import * as i31 from '@angular/flex-layout/flexbox/api/flex-fill';
import * as i32 from '@angular/flex-layout/flexbox/api/flex-align';
import * as i33 from '@angular/flex-layout/flexbox/api/show-hide';
import * as i34 from '@angular/flex-layout/flexbox/api/class';
import * as i35 from '@angular/flex-layout/flexbox/api/style';
import * as i36 from './home.component.ngsummary';
import * as i37 from '../../../../node_modules/@angular/router/router.ngsummary';
import * as i38 from './home.routing.module.ngsummary';
import * as i39 from '../../../../node_modules/@angular/forms/forms.ngsummary';
import * as i40 from '../../../../node_modules/@angular/common/common.ngsummary';
import * as i41 from '../../../../node_modules/@angular/material/typings/index.ngsummary';
import * as i42 from '../../../../node_modules/@angular/flex-layout/media-query/_module.ngsummary';
import * as i43 from '../../../../node_modules/@angular/flex-layout/flexbox/_module.ngsummary';
import * as i44 from '../../common-views/grid-masthead/grid.masthead.module.ngsummary';
import * as i45 from '../../common-views/search-ahead/search.ahead.module.ngsummary';
import * as i46 from '../../common-views/garmentGrid/garment.grid.module.ngsummary';
import * as i47 from '../../common-views/paginator-toolbar/paginator.toolbar.module.ngsummary';
export function HomeModuleNgSummary() {
    return [{ summaryKind: 2, type: { reference: i0.HomeModule, diDeps: [], lifecycleHooks: [] },
            entryComponents: [{ componentType: i1.HomeComponent, componentFactory: i2.HomeComponentNgFactory },
                { componentType: i3.MdDialogContainer, componentFactory: i4.MdDialogContainerNgFactory },
                { componentType: i3.MdDatepickerContent, componentFactory: i4.MdDatepickerContentNgFactory },
                { componentType: i3.MdSnackBarContainer, componentFactory: i4.MdSnackBarContainerNgFactory },
                { componentType: i3.SimpleSnackBar, componentFactory: i4.SimpleSnackBarNgFactory },
                { componentType: i3.TooltipComponent, componentFactory: i4.TooltipComponentNgFactory }],
            providers: [{ provider: { token: { identifier: { reference: i5.ROUTES } }, useClass: null,
                        useValue: [{ path: '', component: i1.HomeComponent }], useFactory: null,
                        useExisting: undefined, deps: undefined, multi: true }, module: { reference: i6.HomeRoutingModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i7.ɵi,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i7.ɵi,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i7.FormsModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i7.FormBuilder, diDeps: [],
                                lifecycleHooks: [] } }, useClass: { reference: i7.FormBuilder, diDeps: [],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [], multi: false }, module: { reference: i7.ReactiveFormsModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i7.ɵi,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i7.ɵi,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i7.ReactiveFormsModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i8.NgLocalization } },
                        useClass: { reference: i8.NgLocaleLocalization, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.LOCALE_ID } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.LOCALE_ID } } }],
                        multi: false }, module: { reference: i8.CommonModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.MATERIAL_SANITY_CHECKS } },
                        useClass: null, useValue: true, useFactory: null, useExisting: undefined,
                        deps: undefined, multi: false }, module: { reference: i3.CompatibilityModule,
                        diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: true, token: { identifier: { reference: i10.DOCUMENT } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i3.MATERIAL_SANITY_CHECKS } } }],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.Platform,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i3.Platform,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i3.PlatformModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.ScrollDispatcher } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ɵd,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.ScrollDispatcher } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i9.NgZone } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.ScrollDispatcher } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i9.NgZone } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i3.ɵm,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.ɵo } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ɵp,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.ɵo } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i3.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i3.ɵo } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i3.MdRippleModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.Overlay,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i3.OverlayContainer } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i9.ComponentFactoryResolver } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i3.ɵr } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.ApplicationRef } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i9.Injector } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i9.NgZone } } }], lifecycleHooks: [] } },
                        useClass: { reference: i3.Overlay, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.OverlayContainer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i9.ComponentFactoryResolver } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i3.ɵr } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.ApplicationRef } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i9.Injector } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i9.NgZone } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i3.OverlayContainer } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i9.ComponentFactoryResolver } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.ɵr } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.ApplicationRef } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i9.Injector } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i9.NgZone } } }], multi: false }, module: { reference: i3.OverlayModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.ɵr,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i3.ɵo } } }], lifecycleHooks: [] } },
                        useClass: { reference: i3.ɵr, diDeps: [{ isAttribute: false, isHost: false, isSelf: false,
                                    isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.ɵo } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.ɵo } } }],
                        multi: false }, module: { reference: i3.OverlayModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.ɵo } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ɵp,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.ɵo } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i3.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i3.ɵo } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i3.OverlayModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.OverlayContainer } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ɵb,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.OverlayContainer } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.OverlayContainer } } }],
                        multi: false }, module: { reference: i3.OverlayModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.FocusOriginMonitor } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.FocusOriginMonitor } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i9.NgZone } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.FocusOriginMonitor } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i9.NgZone } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i3.StyleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.UniqueSelectionDispatcher } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ɵh,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.UniqueSelectionDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.UniqueSelectionDispatcher } } }],
                        multi: false }, module: { reference: i3.MdButtonToggleModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.FocusOriginMonitor,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i9.NgZone } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i3.FocusOriginMonitor,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i9.NgZone } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i3.MdCheckboxModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.InteractivityChecker,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i3.Platform } } }], lifecycleHooks: [] } },
                        useClass: { reference: i3.InteractivityChecker, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                        multi: false }, module: { reference: i3.A11yModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i3.FocusTrapFactory, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.InteractivityChecker } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i9.NgZone } } }], lifecycleHooks: [] } },
                        useClass: { reference: i3.FocusTrapFactory, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.InteractivityChecker } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i9.NgZone } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i3.InteractivityChecker } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i9.NgZone } } }], multi: false }, module: { reference: i3.A11yModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.LiveAnnouncer } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ɵg,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.LiveAnnouncer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: true, token: { identifier: { reference: i3.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.LiveAnnouncer } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i3.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i3.A11yModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.MdDialog,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i3.Overlay } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.Injector } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                        token: { identifier: { reference: i8.Location } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.MdDialog } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i3.MdDialog, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Overlay } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i9.Injector } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i8.Location } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                    token: { identifier: { reference: i3.MdDialog } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i3.Overlay } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.Injector } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i8.Location } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.MdDialog } } }],
                        multi: false }, module: { reference: i3.MdDialogModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.MdDatepickerIntl,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i3.MdDatepickerIntl,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i3.MdDatepickerModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.MdIconRegistry } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ICON_REGISTRY_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.MdIconRegistry } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: true, token: { identifier: { reference: i11.Http } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i10.DomSanitizer } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.MdIconRegistry } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i11.Http } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i10.DomSanitizer } } }], multi: false },
                    module: { reference: i3.MdIconModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i3.UniqueSelectionDispatcher } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i3.ɵh, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.UniqueSelectionDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.UniqueSelectionDispatcher } } }],
                        multi: false }, module: { reference: i3.MdRadioModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.ɵo } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ɵp,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.ɵo } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i3.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i3.ɵo } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i3.MdRadioModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.FocusOriginMonitor,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i9.NgZone } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i3.FocusOriginMonitor,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i9.NgZone } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Platform } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i3.MdRadioModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i10.HAMMER_GESTURE_CONFIG } },
                        useClass: { reference: i3.GestureConfig, diDeps: [], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [], multi: false }, module: { reference: i3.MdSliderModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.FocusOriginMonitor } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.FocusOriginMonitor } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i9.NgZone } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.FocusOriginMonitor } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i9.NgZone } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i3.MdSlideToggleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i10.HAMMER_GESTURE_CONFIG } },
                        useClass: { reference: i3.GestureConfig, diDeps: [], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [], multi: false }, module: { reference: i3.MdSlideToggleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.MdSnackBar,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i3.Overlay } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.LiveAnnouncer } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                        token: { identifier: { reference: i3.MdSnackBar } } }], lifecycleHooks: [] } },
                        useClass: { reference: i3.MdSnackBar, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Overlay } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i3.LiveAnnouncer } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.MdSnackBar } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Overlay } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.LiveAnnouncer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.MdSnackBar } } }],
                        multi: false }, module: { reference: i3.MdSnackBarModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.LiveAnnouncer } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ɵg,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.LiveAnnouncer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: true, token: { identifier: { reference: i3.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i3.Platform } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i3.LiveAnnouncer } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i3.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i3.Platform } } }], multi: false }, module: { reference: i3.MdSnackBarModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.ɵa,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i3.ɵa,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i3.ObserveContentModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.ɵo } },
                        useClass: null, useValue: undefined, useFactory: { reference: i3.ɵp,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i3.ɵo } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i3.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i3.ɵo } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i3.MdTabsModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i12.MatchMedia,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i9.NgZone } } }], lifecycleHooks: [] } },
                        useClass: { reference: i12.MatchMedia, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.NgZone } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i9.NgZone } } }],
                        multi: false }, module: { reference: i13.MediaQueriesModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i14.BREAKPOINTS } },
                        useClass: null, useValue: i14.RAW_DEFAULTS, useFactory: null,
                        useExisting: undefined, deps: undefined, multi: false },
                    module: { reference: i13.MediaQueriesModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i15.BreakPointRegistry, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i14.BREAKPOINTS } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i15.BreakPointRegistry,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i14.BREAKPOINTS } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i14.BREAKPOINTS } } }],
                        multi: false }, module: { reference: i13.MediaQueriesModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i16.MediaMonitor,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                        isOptional: false, token: { identifier: { reference: i15.BreakPointRegistry } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i12.MatchMedia } } }], lifecycleHooks: [] } },
                        useClass: { reference: i16.MediaMonitor, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i15.BreakPointRegistry } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i12.MatchMedia } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i15.BreakPointRegistry } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i12.MatchMedia } } }], multi: false },
                    module: { reference: i13.MediaQueriesModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i17.ObservableMedia } }, useClass: { reference: i17.MediaService,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                    isOptional: false, token: { identifier: { reference: i12.MatchMedia } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i15.BreakPointRegistry } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i12.MatchMedia } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i15.BreakPointRegistry } } }], multi: false },
                    module: { reference: i13.MediaQueriesModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i16.MediaMonitor, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i15.BreakPointRegistry } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i12.MatchMedia } } }], lifecycleHooks: [] } },
                        useClass: { reference: i16.MediaMonitor, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i15.BreakPointRegistry } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i12.MatchMedia } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                                isOptional: false, token: { identifier: { reference: i15.BreakPointRegistry } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i12.MatchMedia } } }], multi: false },
                    module: { reference: i18.FlexLayoutModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i19.ValidationService, diDeps: [],
                                lifecycleHooks: [] } }, useClass: { reference: i19.ValidationService,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i20.GarmentGridModule, diDeps: [],
                        lifecycleHooks: [] } }], modules: [{ reference: i5.RouterModule,
                    diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                            token: { identifier: { reference: i5.ɵa } } }, { isAttribute: false, isHost: false,
                            isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i5.Router } } }],
                    lifecycleHooks: [] }, { reference: i6.HomeRoutingModule, diDeps: [],
                    lifecycleHooks: [] }, { reference: i7.ɵba, diDeps: [], lifecycleHooks: [] },
                { reference: i7.FormsModule, diDeps: [], lifecycleHooks: [] },
                { reference: i7.ReactiveFormsModule, diDeps: [], lifecycleHooks: [] },
                { reference: i8.CommonModule, diDeps: [], lifecycleHooks: [] },
                { reference: i3.CompatibilityModule, diDeps: [{ isAttribute: false, isHost: false,
                            isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i10.DOCUMENT } } },
                        { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                            token: { identifier: { reference: i3.MATERIAL_SANITY_CHECKS } } }], lifecycleHooks: [] },
                { reference: i3.MdCommonModule, diDeps: [], lifecycleHooks: [] },
                { reference: i3.PlatformModule, diDeps: [], lifecycleHooks: [] },
                { reference: i3.ɵm, diDeps: [], lifecycleHooks: [] }, { reference: i3.MdRippleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdSelectionModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdOptionModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.PortalModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.OverlayModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdAutocompleteModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.StyleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdButtonModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdButtonToggleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdCardModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdChipsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdCheckboxModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.A11yModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdDialogModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdDatepickerModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdLineModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdGridListModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdIconModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdInputModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdListModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdMenuModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdProgressBarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdProgressSpinnerModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdRadioModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdSelectModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdSidenavModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.RtlModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdSliderModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdSlideToggleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdSnackBarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.ObserveContentModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdTabsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdToolbarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MdTooltipModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i3.MaterialModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i13.MediaQueriesModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i18.FlexLayoutModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i21.GridMastheadModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i22.SearchAheadModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i20.GarmentGridModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i23.PaginatorToolbarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i0.HomeModule,
                    diDeps: [], lifecycleHooks: [] }], exportedDirectives: [{ reference: i24.LayoutDirective },
                { reference: i25.LayoutWrapDirective }, { reference: i26.LayoutGapDirective }, { reference: i27.LayoutAlignDirective },
                { reference: i28.FlexDirective }, { reference: i29.FlexOrderDirective }, { reference: i30.FlexOffsetDirective },
                { reference: i31.FlexFillDirective }, { reference: i32.FlexAlignDirective }, { reference: i33.ShowHideDirective },
                { reference: i34.ClassDirective }, { reference: i35.StyleDirective }, { reference: i1.HomeComponent }],
            exportedPipes: [] }, i36.HomeComponentNgSummary, i37.RouterModuleNgSummary,
        i38.HomeRoutingModuleNgSummary, i39.ɵbaNgSummary, i39.FormsModuleNgSummary, i39.ReactiveFormsModuleNgSummary,
        i40.CommonModuleNgSummary, i41.CompatibilityModuleNgSummary, i41.MdCommonModuleNgSummary,
        i41.PlatformModuleNgSummary, i41.ɵmNgSummary, i41.MdRippleModuleNgSummary, i41.MdSelectionModuleNgSummary,
        i41.MdOptionModuleNgSummary, i41.PortalModuleNgSummary, i41.OverlayModuleNgSummary,
        i41.MdAutocompleteModuleNgSummary, i41.StyleModuleNgSummary, i41.MdButtonModuleNgSummary,
        i41.MdButtonToggleModuleNgSummary, i41.MdCardModuleNgSummary, i41.MdChipsModuleNgSummary,
        i41.MdCheckboxModuleNgSummary, i41.A11yModuleNgSummary, i41.MdDialogModuleNgSummary,
        i41.MdDatepickerModuleNgSummary, i41.MdLineModuleNgSummary, i41.MdGridListModuleNgSummary,
        i41.MdIconModuleNgSummary, i41.MdInputModuleNgSummary, i41.MdListModuleNgSummary,
        i41.MdMenuModuleNgSummary, i41.MdProgressBarModuleNgSummary, i41.MdProgressSpinnerModuleNgSummary,
        i41.MdRadioModuleNgSummary, i41.MdSelectModuleNgSummary, i41.MdSidenavModuleNgSummary,
        i41.RtlModuleNgSummary, i41.MdSliderModuleNgSummary, i41.MdSlideToggleModuleNgSummary,
        i41.MdSnackBarModuleNgSummary, i41.ObserveContentModuleNgSummary, i41.MdTabsModuleNgSummary,
        i41.MdToolbarModuleNgSummary, i41.MdTooltipModuleNgSummary, i41.MaterialModuleNgSummary,
        i42.MediaQueriesModuleNgSummary, i43.FlexLayoutModuleNgSummary, i44.GridMastheadModuleNgSummary,
        i45.SearchAheadModuleNgSummary, i46.GarmentGridModuleNgSummary, i47.PaginatorToolbarModuleNgSummary];
}
