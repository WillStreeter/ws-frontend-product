import * as i0 from './paginator.toolbar.module';
import * as i1 from '@angular/material';
import * as i2 from '../../../../node_modules/@angular/material/typings/index.ngfactory';
import * as i3 from '@angular/forms';
import * as i4 from '@angular/common';
import * as i5 from '@angular/core';
import * as i6 from '@angular/platform-browser';
import * as i7 from '@angular/http';
import * as i8 from '@angular/flex-layout/media-query/match-media';
import * as i9 from '@angular/flex-layout/media-query/_module';
import * as i10 from '@angular/flex-layout/media-query/breakpoints/break-points';
import * as i11 from '@angular/flex-layout/media-query/breakpoints/break-point-registry';
import * as i12 from '@angular/flex-layout/media-query/media-monitor';
import * as i13 from '@angular/flex-layout/media-query/observable-media-service';
import * as i14 from '@angular/flex-layout/flexbox/_module';
import * as i15 from './paginator.toolbar.component';
import * as i16 from './paginator.toolbar.component.ngsummary';
import * as i17 from '../../../../node_modules/@angular/forms/forms.ngsummary';
import * as i18 from '../../../../node_modules/@angular/common/common.ngsummary';
import * as i19 from '../../../../node_modules/@angular/material/typings/index.ngsummary';
import * as i20 from '../../../../node_modules/@angular/flex-layout/media-query/_module.ngsummary';
import * as i21 from '../../../../node_modules/@angular/flex-layout/flexbox/_module.ngsummary';
export function PaginatorToolbarModuleNgSummary() {
    return [{ summaryKind: 2, type: { reference: i0.PaginatorToolbarModule, diDeps: [],
                lifecycleHooks: [] }, entryComponents: [{ componentType: i1.MdDialogContainer,
                    componentFactory: i2.MdDialogContainerNgFactory }, { componentType: i1.MdDatepickerContent,
                    componentFactory: i2.MdDatepickerContentNgFactory }, { componentType: i1.MdSnackBarContainer,
                    componentFactory: i2.MdSnackBarContainerNgFactory }, { componentType: i1.SimpleSnackBar,
                    componentFactory: i2.SimpleSnackBarNgFactory }, { componentType: i1.TooltipComponent,
                    componentFactory: i2.TooltipComponentNgFactory }], providers: [{ provider: { token: { identifier: { reference: i3.ɵi,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i3.ɵi,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [], multi: false },
                    module: { reference: i3.FormsModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i3.FormBuilder, diDeps: [],
                                lifecycleHooks: [] } }, useClass: { reference: i3.FormBuilder, diDeps: [],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [], multi: false }, module: { reference: i3.ReactiveFormsModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i3.ɵi,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i3.ɵi,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i3.ReactiveFormsModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i4.NgLocalization } },
                        useClass: { reference: i4.NgLocaleLocalization, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.LOCALE_ID } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.LOCALE_ID } } }],
                        multi: false }, module: { reference: i4.CommonModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.MATERIAL_SANITY_CHECKS } }, useClass: null,
                        useValue: true, useFactory: null, useExisting: undefined, deps: undefined,
                        multi: false }, module: { reference: i1.CompatibilityModule, diDeps: [{ isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i6.DOCUMENT } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i1.MATERIAL_SANITY_CHECKS } } }], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.Platform, diDeps: [], lifecycleHooks: [] } },
                        useClass: { reference: i1.Platform, diDeps: [], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [], multi: false }, module: { reference: i1.PlatformModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ScrollDispatcher } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵd,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.ScrollDispatcher } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.ScrollDispatcher } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.ɵm,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ɵo } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵp,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.ɵo } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ɵo } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ScrollDispatcher } } }], multi: false },
                    module: { reference: i1.MdRippleModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.Overlay, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.OverlayContainer } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i5.ComponentFactoryResolver } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ɵr } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i5.ApplicationRef } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.Injector } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i5.NgZone } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.Overlay, diDeps: [{ isAttribute: false, isHost: false, isSelf: false,
                                    isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.OverlayContainer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.ComponentFactoryResolver } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ɵr } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.ApplicationRef } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.Injector } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.NgZone } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.OverlayContainer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.ComponentFactoryResolver } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ɵr } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.ApplicationRef } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i5.Injector } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ɵr, diDeps: [{ isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ɵo } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.ɵr, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ɵo } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ɵo } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ɵo } }, useClass: null, useValue: undefined,
                        useFactory: { reference: i1.ɵp, diDeps: [{ isAttribute: false, isHost: false, isSelf: false,
                                    isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ɵo } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.ɵo } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.OverlayContainer } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵb, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.OverlayContainer } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.OverlayContainer } } }],
                        multi: false }, module: { reference: i1.OverlayModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.FocusOriginMonitor } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.FocusOriginMonitor } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.FocusOriginMonitor } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.StyleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.UniqueSelectionDispatcher } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵh,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }],
                        multi: false }, module: { reference: i1.MdButtonToggleModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.FocusOriginMonitor,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.FocusOriginMonitor,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.MdCheckboxModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.InteractivityChecker,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.Platform } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.InteractivityChecker, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                        multi: false }, module: { reference: i1.A11yModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.FocusTrapFactory, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.InteractivityChecker } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i5.NgZone } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.FocusTrapFactory, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.InteractivityChecker } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.NgZone } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.InteractivityChecker } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } }],
                        multi: false }, module: { reference: i1.A11yModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.LiveAnnouncer } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵg, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.LiveAnnouncer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                    token: { identifier: { reference: i1.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.LiveAnnouncer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i1.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.A11yModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdDialog,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.Overlay } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.Injector } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                        token: { identifier: { reference: i4.Location } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdDialog } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i1.MdDialog, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Overlay } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.Injector } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i4.Location } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                    token: { identifier: { reference: i1.MdDialog } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Overlay } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.Injector } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i4.Location } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdDialog } } }],
                        multi: false }, module: { reference: i1.MdDialogModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.MdDatepickerIntl, diDeps: [],
                                lifecycleHooks: [] } }, useClass: { reference: i1.MdDatepickerIntl, diDeps: [],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [], multi: false }, module: { reference: i1.MdDatepickerModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdIconRegistry } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ICON_REGISTRY_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.MdIconRegistry } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                    token: { identifier: { reference: i7.Http } } }, { isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.DomSanitizer } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdIconRegistry } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                token: { identifier: { reference: i7.Http } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i6.DomSanitizer } } }],
                        multi: false }, module: { reference: i1.MdIconModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.UniqueSelectionDispatcher } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.ɵh, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.UniqueSelectionDispatcher } } }],
                        multi: false }, module: { reference: i1.MdRadioModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.ɵo } }, useClass: null, useValue: undefined,
                        useFactory: { reference: i1.ɵp, diDeps: [{ isAttribute: false, isHost: false, isSelf: false,
                                    isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ɵo } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.ScrollDispatcher } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.ɵo } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }],
                        multi: false }, module: { reference: i1.MdRadioModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.FocusOriginMonitor, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.Platform } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.FocusOriginMonitor, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Platform } } }],
                        multi: false }, module: { reference: i1.MdRadioModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i6.HAMMER_GESTURE_CONFIG } }, useClass: { reference: i1.GestureConfig,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i1.MdSliderModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i1.FocusOriginMonitor } }, useClass: null,
                        useValue: undefined, useFactory: { reference: i1.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.FocusOriginMonitor } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i5.NgZone } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.FocusOriginMonitor } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.MdSlideToggleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i6.HAMMER_GESTURE_CONFIG } },
                        useClass: { reference: i1.GestureConfig, diDeps: [], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [], multi: false }, module: { reference: i1.MdSlideToggleModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.MdSnackBar,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i1.Overlay } } }, { isAttribute: false, isHost: false,
                                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.LiveAnnouncer } } },
                                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                        token: { identifier: { reference: i1.MdSnackBar } } }], lifecycleHooks: [] } },
                        useClass: { reference: i1.MdSnackBar, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Overlay } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.LiveAnnouncer } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdSnackBar } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Overlay } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.LiveAnnouncer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.MdSnackBar } } }],
                        multi: false }, module: { reference: i1.MdSnackBarModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.LiveAnnouncer } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵg,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.LiveAnnouncer } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                                    token: { identifier: { reference: i1.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i1.Platform } } }] }, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true, isOptional: true,
                                token: { identifier: { reference: i1.LiveAnnouncer } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i1.LIVE_ANNOUNCER_ELEMENT_TOKEN } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.Platform } } }], multi: false }, module: { reference: i1.MdSnackBarModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ɵa,
                                diDeps: [], lifecycleHooks: [] } }, useClass: { reference: i1.ɵa,
                            diDeps: [], lifecycleHooks: [] }, useValue: undefined,
                        useFactory: null, useExisting: undefined, deps: [],
                        multi: false }, module: { reference: i1.ObserveContentModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i1.ɵo } },
                        useClass: null, useValue: undefined, useFactory: { reference: i1.ɵp,
                            diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: true,
                                    isOptional: true, token: { identifier: { reference: i1.ɵo } } }, { isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.ScrollDispatcher } } }] },
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: true, isOptional: true, token: { identifier: { reference: i1.ɵo } } },
                            { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i1.ScrollDispatcher } } }], multi: false },
                    module: { reference: i1.MdTabsModule, diDeps: [], lifecycleHooks: [] } },
                { provider: { token: { identifier: { reference: i8.MatchMedia, diDeps: [{ isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i8.MatchMedia, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.NgZone } } }],
                        multi: false }, module: { reference: i9.MediaQueriesModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i10.BREAKPOINTS } },
                        useClass: null, useValue: i10.RAW_DEFAULTS, useFactory: null,
                        useExisting: undefined, deps: undefined, multi: false }, module: { reference: i9.MediaQueriesModule,
                        diDeps: [], lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i11.BreakPointRegistry,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i10.BREAKPOINTS } } }], lifecycleHooks: [] } },
                        useClass: { reference: i11.BreakPointRegistry, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i10.BREAKPOINTS } } }],
                            lifecycleHooks: [] }, useValue: undefined, useFactory: null,
                        useExisting: undefined, deps: [{ isAttribute: false, isHost: false, isSelf: false,
                                isSkipSelf: false, isOptional: false, token: { identifier: { reference: i10.BREAKPOINTS } } }],
                        multi: false }, module: { reference: i9.MediaQueriesModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i12.MediaMonitor,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i11.BreakPointRegistry } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i8.MatchMedia } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i12.MediaMonitor, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i11.BreakPointRegistry } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i8.MatchMedia } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i11.BreakPointRegistry } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i8.MatchMedia } } }],
                        multi: false }, module: { reference: i9.MediaQueriesModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i13.ObservableMedia } },
                        useClass: { reference: i13.MediaService, diDeps: [{ isAttribute: false, isHost: false,
                                    isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i8.MatchMedia } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i11.BreakPointRegistry } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i8.MatchMedia } } }, { isAttribute: false, isHost: false,
                                isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i11.BreakPointRegistry } } }],
                        multi: false }, module: { reference: i9.MediaQueriesModule, diDeps: [],
                        lifecycleHooks: [] } }, { provider: { token: { identifier: { reference: i12.MediaMonitor,
                                diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                        token: { identifier: { reference: i11.BreakPointRegistry } } }, { isAttribute: false,
                                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i8.MatchMedia } } }],
                                lifecycleHooks: [] } }, useClass: { reference: i12.MediaMonitor, diDeps: [{ isAttribute: false,
                                    isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i11.BreakPointRegistry } } },
                                { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                    token: { identifier: { reference: i8.MatchMedia } } }], lifecycleHooks: [] },
                        useValue: undefined, useFactory: null, useExisting: undefined,
                        deps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                                token: { identifier: { reference: i11.BreakPointRegistry } } }, { isAttribute: false,
                                isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i8.MatchMedia } } }],
                        multi: false }, module: { reference: i14.FlexLayoutModule, diDeps: [],
                        lifecycleHooks: [] } }], modules: [{ reference: i3.ɵba, diDeps: [],
                    lifecycleHooks: [] }, { reference: i3.FormsModule, diDeps: [],
                    lifecycleHooks: [] }, { reference: i3.ReactiveFormsModule, diDeps: [],
                    lifecycleHooks: [] }, { reference: i4.CommonModule, diDeps: [],
                    lifecycleHooks: [] }, { reference: i1.CompatibilityModule, diDeps: [{ isAttribute: false,
                            isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i6.DOCUMENT } } },
                        { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                            token: { identifier: { reference: i1.MATERIAL_SANITY_CHECKS } } }], lifecycleHooks: [] },
                { reference: i1.MdCommonModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.PlatformModule, diDeps: [], lifecycleHooks: [] },
                { reference: i1.ɵm, diDeps: [], lifecycleHooks: [] }, { reference: i1.MdRippleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSelectionModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdOptionModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.PortalModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.OverlayModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdAutocompleteModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.StyleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdButtonModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdButtonToggleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdCardModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdChipsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdCheckboxModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.A11yModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdDialogModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdDatepickerModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdLineModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdGridListModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdIconModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdInputModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdListModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdMenuModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdProgressBarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdProgressSpinnerModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdRadioModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSelectModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSidenavModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.RtlModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSliderModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSlideToggleModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdSnackBarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.ObserveContentModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdTabsModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdToolbarModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MdTooltipModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i1.MaterialModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i9.MediaQueriesModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i14.FlexLayoutModule,
                    diDeps: [], lifecycleHooks: [] }, { reference: i0.PaginatorToolbarModule,
                    diDeps: [], lifecycleHooks: [] }], exportedDirectives: [{ reference: i15.PaginatorToolbarComponent }],
            exportedPipes: [] }, i16.PaginatorToolbarComponentNgSummary, i17.ɵbaNgSummary,
        i17.FormsModuleNgSummary, i17.ReactiveFormsModuleNgSummary, i18.CommonModuleNgSummary,
        i19.CompatibilityModuleNgSummary, i19.MdCommonModuleNgSummary, i19.PlatformModuleNgSummary,
        i19.ɵmNgSummary, i19.MdRippleModuleNgSummary, i19.MdSelectionModuleNgSummary, i19.MdOptionModuleNgSummary,
        i19.PortalModuleNgSummary, i19.OverlayModuleNgSummary, i19.MdAutocompleteModuleNgSummary,
        i19.StyleModuleNgSummary, i19.MdButtonModuleNgSummary, i19.MdButtonToggleModuleNgSummary,
        i19.MdCardModuleNgSummary, i19.MdChipsModuleNgSummary, i19.MdCheckboxModuleNgSummary,
        i19.A11yModuleNgSummary, i19.MdDialogModuleNgSummary, i19.MdDatepickerModuleNgSummary,
        i19.MdLineModuleNgSummary, i19.MdGridListModuleNgSummary, i19.MdIconModuleNgSummary,
        i19.MdInputModuleNgSummary, i19.MdListModuleNgSummary, i19.MdMenuModuleNgSummary,
        i19.MdProgressBarModuleNgSummary, i19.MdProgressSpinnerModuleNgSummary, i19.MdRadioModuleNgSummary,
        i19.MdSelectModuleNgSummary, i19.MdSidenavModuleNgSummary, i19.RtlModuleNgSummary,
        i19.MdSliderModuleNgSummary, i19.MdSlideToggleModuleNgSummary, i19.MdSnackBarModuleNgSummary,
        i19.ObserveContentModuleNgSummary, i19.MdTabsModuleNgSummary, i19.MdToolbarModuleNgSummary,
        i19.MdTooltipModuleNgSummary, i19.MaterialModuleNgSummary, i20.MediaQueriesModuleNgSummary,
        i21.FlexLayoutModuleNgSummary];
}
